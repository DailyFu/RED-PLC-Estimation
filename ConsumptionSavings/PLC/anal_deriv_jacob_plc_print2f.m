% anal_deriv_jacob_plc_print2f.m
% anal_deriv_jacob_plc_print2f(filename,fx0,fxp0,fy0,fyp0,fx1,fxp1,fy1,fyp1);
% Writes symbolic derivatives of the residual equations for the PLC solution  
% to an m-file for numeric evaluation.
%
% inputs: 
%         filename: ' ...' name of the file to append to '_num_eval_plc'
%         fx0,fxp0,fy0,fyp0 -> Symbolic matrix of regime 0; (Binding)  
%         fx1,fxp1,fy!,fyp1 -> Symbolic matrix of regime 1; (Slack)
% output: m-file "filename_num_eval.m" 
%
% Based on code by Andrea Pescatori (Jun 18 2008)
% Modified by Pablo Cuba-Borda (Sep 4 2019)
%==========================================================================

function anal_deriv_jacob_plc_print2f(filename,fx0,fxp0,fy0,fyp0,fx1,fxp1,fy1,fyp1)
% 
fid=fopen([filename,'_num_eval_plc.m'],'w');
fprintf(fid,'%% File name: %s_num_eval.m \n',filename);
fprintf(fid,'%% File generated by anal_deriv_print2f.m Date: %s\n\n',date);

S = char(fx0(:));
S=['nfx0=', S(8:end-1),';\n'];  
S=regexprep(S, ',', '\r'); 
fprintf(fid,S);

S = char(fxp0(:));
S=['nfxp0=', S(8:end-1),';\n']; 
S=regexprep(S, ',', '\r');
fprintf(fid,S);

S = char(fy0(:));
S=['nfy0=', S(8:end-1),';\n'];
S=regexprep(S, ',', '\r'); 
fprintf(fid,S);

S = char(fyp0(:));
S=['nfyp0=', S(8:end-1),';\n']; 
S=regexprep(S, ',', '\r'); 
fprintf(fid,S);


S2F = ['nfx0=reshape(nfx0,[', num2str(size(fx0)),']);\n'];  % (1)
fprintf(fid,S2F);

S2F = ['nfxp0=reshape(nfxp0,[', num2str(size(fxp0)),']);\n'];  % (1)
fprintf(fid,S2F);

S2F = ['nfy0=reshape(nfy0,[', num2str(size(fy0)),']);\n'];  % (1)
fprintf(fid,S2F);

S2F = ['nfyp0=reshape(nfyp0,[', num2str(size(fyp0)),']);\n'];  % (1)
fprintf(fid,S2F);


%%

S = char(fx1(:));
S=['nfx1=', S(8:end-1),';\n'];  
S=regexprep(S, ',', '\r'); 
fprintf(fid,S);

S = char(fxp1(:));
S=['nfxp1=', S(8:end-1),';\n']; 
S=regexprep(S, ',', '\r');
fprintf(fid,S);

S = char(fy1(:));
S=['nfy1=', S(8:end-1),';\n'];
S=regexprep(S, ',', '\r'); 
fprintf(fid,S);

S = char(fyp1(:));
S=['nfyp1=', S(8:end-1),';\n']; 
S=regexprep(S, ',', '\r'); 
fprintf(fid,S);


S2F = ['nfx1=reshape(nfx1,[', num2str(size(fx1)),']);\n'];  % (1)
fprintf(fid,S2F);

S2F = ['nfxp1=reshape(nfxp1,[', num2str(size(fxp1)),']);\n'];  % (1)
fprintf(fid,S2F);

S2F = ['nfy1=reshape(nfy1,[', num2str(size(fy1)),']);\n'];  % (1)
fprintf(fid,S2F);

S2F = ['nfyp1=reshape(nfyp1,[', num2str(size(fyp1)),']);\n'];  % (1)
fprintf(fid,S2F);


fclose(fid);
